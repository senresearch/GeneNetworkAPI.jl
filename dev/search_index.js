var documenterSearchIndex = {"docs":
[{"location":"functions/#Functions","page":"Functions","title":"Functions","text":"","category":"section"},{"location":"functions/","page":"Functions","title":"Functions","text":"CurrentModule = GeneNetworkAPI","category":"page"},{"location":"functions/","page":"Functions","title":"Functions","text":"","category":"page"},{"location":"functions/#Server-functions","page":"Functions","title":"Server functions","text":"","category":"section"},{"location":"functions/","page":"Functions","title":"Functions","text":"GeneNetworkAPI.gn_url\nGeneNetworkAPI.check_gn","category":"page"},{"location":"functions/#GeneNetworkAPI.gn_url","page":"Functions","title":"GeneNetworkAPI.gn_url","text":"gn_url()\n\nReturn the default GeneNetwork server API URL.\n\nAll user-level functions optionally take a GeneNetwork server URL that could be different from the standard URL in case one wanted to query a different instance of the server.\n\nExample\n\njulia> gn_url()\n\"http://gn2.genenetwork.org/api/v_pre1/\"\n\n\n\n\n\n","category":"function"},{"location":"functions/#GeneNetworkAPI.check_gn","page":"Functions","title":"GeneNetworkAPI.check_gn","text":"check_gn(url::AbstractString)\n\nCheck if GeneNetwork server is responding properly.\n\nReturns the HTTP status code (200 if successful) and prints a message.\n\nExample\n\njulia> check_gn()\nGeneNetwork is alive.\n200\n\n\n\n\n\n","category":"function"},{"location":"functions/#List-what's-in-the-database","page":"Functions","title":"List what's in the database","text":"","category":"section"},{"location":"functions/","page":"Functions","title":"Functions","text":"GeneNetworkAPI.list_datasets\nGeneNetworkAPI.list_groups\nGeneNetworkAPI.list_species","category":"page"},{"location":"functions/#GeneNetworkAPI.list_datasets","page":"Functions","title":"GeneNetworkAPI.list_datasets","text":"list_datasets(group::String=\"\";gn_url::String=gn_url())\n\nLists all datasets available in a specified group.\n\n\n\n\n\n","category":"function"},{"location":"functions/#GeneNetworkAPI.list_groups","page":"Functions","title":"GeneNetworkAPI.list_groups","text":"list_groups(species::String=\"\";gn_url::String=gn_url())\n\nIf species is not specified, then it returns all groups (segregating populations) represented in the GeneNetwork database.  If the string species is specified, then it returns all groups for that species.\n\n\n\n\n\n","category":"function"},{"location":"functions/#GeneNetworkAPI.list_species","page":"Functions","title":"GeneNetworkAPI.list_species","text":"list_species(species::String=\"\";gn_url::String=gn_url())\n\nReturns a data frame with a list of species respresented in the GeneNetwork database.  If the species string is non-empty, it will return the information of the matched species.\n\n\n\n\n\n","category":"function"},{"location":"functions/#Get-data-and-information","page":"Functions","title":"Get data and information","text":"","category":"section"},{"location":"functions/","page":"Functions","title":"Functions","text":"GeneNetworkAPI.get_geno\nGeneNetworkAPI.get_pheno\nGeneNetworkAPI.info_dataset\nGeneNetworkAPI.info_pheno","category":"page"},{"location":"functions/#GeneNetworkAPI.get_geno","page":"Functions","title":"GeneNetworkAPI.get_geno","text":"get_geno(group::String,format::String=\"geno\";gn_url::String=gn_url())\n\nReturns the genotype matrix for a group in a given format.\n\nCurrently works only for files in the geno format.\n\n\n\n\n\n","category":"function"},{"location":"functions/#GeneNetworkAPI.get_pheno","page":"Functions","title":"GeneNetworkAPI.get_pheno","text":"get_pheno(dataset::String;gn_url::String=gn_url())\n\nReturns the non-omic (\"clinical\") phenotypes for a given dataset.\n\n\n\n\n\nget_pheno(group::String,trait::String=\"geno\";gn_url::String=gn_url())\n\nReturns a given trait in a group.\n\n\n\n\n\n","category":"function"},{"location":"functions/#GeneNetworkAPI.info_dataset","page":"Functions","title":"GeneNetworkAPI.info_dataset","text":"info_dataset(dataset::String, trait::String=\"\"; gn_url::String = gn_url())\n\nReturns information about a dataset (if trait is empty), or else a given trait in a specified dataset.\n\n\n\n\n\n","category":"function"},{"location":"functions/#GeneNetworkAPI.info_pheno","page":"Functions","title":"GeneNetworkAPI.info_pheno","text":"info_pheno(group::String; gn_url::String=gn_url())\n\nReturns the maximum LRS for each trait in a group`.\n\n\n\n\n\ninfo_pheno(group::String, trait::String; gn_url::String=gn_url())\n\nReturns the maximum LRS for each trait in a group, or alternatively a probe (use trait) in dataset (use group).\n\n\n\n\n\n","category":"function"},{"location":"functions/#Run-jobs-on-the-server","page":"Functions","title":"Run jobs on the server","text":"","category":"section"},{"location":"functions/","page":"Functions","title":"Functions","text":"GeneNetworkAPI.run_correlation\nGeneNetworkAPI.run_gemma\nGeneNetworkAPI.run_rqtl","category":"page"},{"location":"functions/#GeneNetworkAPI.run_correlation","page":"Functions","title":"GeneNetworkAPI.run_correlation","text":"run_correlation(trait::String, dataset::String, group::String; tp:;String=\"sample\",\n                method::String=\"pearson\", n_result::Int64=500,\n                gn_url::String=gn_url())\n\nThis function correlates a trait in a dataset against all traits in a target database (group).\n\nThis query currently takes the following parameters:\n\ntrait (required): trait ID for which the correlation is wanted\ndataset (required): dataset in which the trait occurs (use the short abbreviation)\ngroup (required): group in which which the comparisons will be performed\ntp: sample (default) | tissue\nmethod: pearson (default) | spearman\nn_result: maximum number of results to return (default = 500)\n\n\n\n\n\n","category":"function"},{"location":"functions/#GeneNetworkAPI.run_gemma","page":"Functions","title":"GeneNetworkAPI.run_gemma","text":"run_gemma(dataset::String,trait::String; use_loco::Bool=false, maf::Float64=0.01,\n    gn_url::String=gn_url())\n\nRuns GEMMA with the specified trait in the specified dataset. Optional arguments include:\n\nuse_loco (default=false): if LOCO (leave one chromosome out) should be used\nmaf (default=0.01): the minimum minor allele frequency of the markers to be scanned\n\n\n\n\n\n","category":"function"},{"location":"functions/#GeneNetworkAPI.run_rqtl","page":"Functions","title":"GeneNetworkAPI.run_rqtl","text":"function run_rqtl(dataset::String, trait::String; method::String=\"hk\",\n              model::String=\"normal\", n_perm::Int64=0,\n              control_marker::String=\"\",\n              gn_url::String=gn_url())\n\nRuns R/qtl's scanone function with the specified trait in the specified dataset.\n\nSome optional arguments have analogs in options in the parent scanone function.  See the help for that function.\n\nOptional arguments inlcude:\n\nmethod (default=\"hk\"): possible values are\nhk: Haley-Knott method\nem: EM algorithm\nehk: Extended EM algorithm\nimp: multiple imputation\nmr: marker regression dropping individuals with missing genotypes\nmr-imp: marker regression filling in missing data with a single imputation\nmr-argmax: marker regression filling in by the Viterbi algorithm\nmodel (default=\"normal\"): model for trait given genotypes; possible values are\nnormal: equivalent to linear regression with complete data\nbinary: equivalent to logistic regression with complete data\n2part: two-part model for trait given genotype\nnp: non-parametric analysis\nn_perm (default=0) number of permutations to perform\ncontrol_marker: name of marker to control for as an additive covariate\n\n\n\n\n\n","category":"function"},{"location":"","page":"Overview","title":"Overview","text":"CurrentModule = GeneNetworkAPI","category":"page"},{"location":"#Overview","page":"Overview","title":"Overview","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"The GeneNetworkAPI package provides  access to the GeneNetwork database and analysis functions using the GeneNetwork REST API.","category":"page"},{"location":"#Credits","page":"Overview","title":"Credits","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Pjotr Prins and Zach Sloan are the main contributors to the GeneNetwork REST API.  Karl Broman wrote the GNapi R package for providing access to GeneNetwork from R.  This package follows the structure and function of that package closely.","category":"page"},{"location":"#Note-on-terminology","page":"Overview","title":"Note on terminology","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"GeneNetwork collects data on genetically segregating populations (called groups) in a number of species including humans.  Most of the phenotype data is \"omic\" data which are organized as datasets. ","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"using GeneNetworkAPI","category":"page"},{"location":"#Check-connection","page":"Overview","title":"Check connection","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"To check if the website is responding properly:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"check_gn()","category":"page"},{"location":"#Get-species-list","page":"Overview","title":"Get species list","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Which species have data on them?","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"list_species()","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"To get information on a single species:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"list_species(\"rat\")","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"You could also subset (safer):","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"GeneNetworkAPI.subset(list_species(), :Name => x->x.==\"rat\")","category":"page"},{"location":"#List-groups-for-a-species","page":"Overview","title":"List groups for a species","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Since the information is organized by segregating population (\"group\"), it is useful to get a list for a preticular species you might be interested in.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"ENV[\"COLUMNS\"] = 150; #hide\nlist_groups(\"rat\")","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"You can see the type of population it is.  Note the short name (Name) as that will be used in queries involving that population (group).","category":"page"},{"location":"#Get-genotypes-for-a-group","page":"Overview","title":"Get genotypes for a group","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"To get the genotypes of a group:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"ENV[\"COLUMNS\"] = 150; #hide\nget_geno(\"BXD\") |> (x->first(x,10))","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Currently, we only support the .geno format which returns a data frame of genotypes with rows as marker and columns as individuals.","category":"page"},{"location":"#List-datasets-for-a-group","page":"Overview","title":"List datasets for a group","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"To list the (omic) datasets available for a group, you have to use the name as listed in the group list for a species:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"ENV[\"COLUMNS\"] = 150; #hide\nlist_datasets(\"HSNIH-Palmer\")","category":"page"},{"location":"#List-meta-information-of-genotype-file","page":"Overview","title":"List meta information of genotype file","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"To list the meta information of a genotype file for a group, you have to use the name as listed in the group list for a species:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"ENV[\"COLUMNS\"] = 150; #hide\nlist_geno(\"BXD\")","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"In the case where multiple genotype dataset are associated to a group,  the * indicates the default genotype dataset.","category":"page"},{"location":"#Get-sample-data-for-a-group","page":"Overview","title":"Get sample data for a group","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"This gives you a matrix with rows as individuals/samples/strains and columns as \"clinical\" (non-omic) phenotypes.  The number after the underscore is the phenotype number (to be used later).  Some data may be missing.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"ENV[\"COLUMNS\"] = 150; #hide\nget_pheno(\"HSNIH-Palmer\") |> (x->x[81:100,:]) |> show","category":"page"},{"location":"#Get-information-about-traits","page":"Overview","title":"Get information about traits","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"To get information on a particular (non-omic) trait use the group name and the trait number:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"ENV[\"COLUMNS\"] = 100; #hide\ninfo_dataset(\"HSNIH-Palmer\",\"10308\")","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"To get information on a dataset (of omic traits) for a group, use:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"ENV[\"COLUMNS\"] = 150; #hide\ninfo_dataset(\"HSNIH-Rat-Acbc-RSeq-Aug18\")\n","category":"page"},{"location":"#Summary-information-on-traits","page":"Overview","title":"Summary information on traits","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Get a list of the maximum LRS for each trait and position.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"ENV[\"COLUMNS\"] = 100; #hide\ninfo_pheno(\"HXBBXH\") |> (x->first(x,10))","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"You could also specify a group and a trait number or a dataset and a probename.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"info_pheno(\"BXD\",\"10001\")","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"ENV[\"COLUMNS\"] = 150; #hide\ninfo_pheno(\"HC_M2_0606_P\",\"1436869_at\")","category":"page"},{"location":"#Analysis-commands","page":"Overview","title":"Analysis commands","text":"","category":"section"},{"location":"#GEMMA","page":"Overview","title":"GEMMA","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"run_gemma(\"BXDPublish\",\"10015\",use_loco=true) |> (x->first(x,10))","category":"page"},{"location":"#R/qtl","page":"Overview","title":"R/qtl","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"This function performs a one-dimensional genome scan.  The arguments are","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"db (required) - DB name for trait above (Short_Abbreviation listed when you query for datasets)\ntrait (required) - ID for trait being mapped\nmethod - hk (default) | ehk | em | imp | mr | mr-imp | mr-argmax ; Corresponds to the \"method\" option for the R/qtl scanone function.\nmodel - normal (default) | binary | 2-part | np ; corresponds to the \"model\" option for the R/qtl scanone function\nn_perm - number of permutations; 0 by default\ncontrol_marker - Name of marker to use as control; this relies on the user knowing the name of the marker they want to use as a covariate\ninterval_mapping - Whether to use interval mapping; \"false\" by default","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"run_rqtl(\"BXDPublish\", \"10015\") |> (x->first(x,10))","category":"page"},{"location":"#Correlation","page":"Overview","title":"Correlation","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"This function correlates a trait in a dataset against all traits in a target database.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"trait_id (required) - ID for trait used for correlation\ndb (required) - DB name for the trait above (this is the Short_Abbreviation listed when you query for datasets)\ntarget_db (required) - Target DB name to be correlated against\ntype - sample (default) | tissue\nmethod - pearson (default) | spearman\nreturn - Number of results to return (default = 500)","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"run_correlation(\"1427571_at\",\"HC_M2_0606_P\",\"BXDPublish\") |> (x->first(x,10))","category":"page"}]
}
